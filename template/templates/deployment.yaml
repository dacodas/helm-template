{{- $organizationHost := printf "%s.organization.org" .Chart.Name -}}
{{- $configMapPrefix := include "%%% APPLICATION_NAME %%%.fullname" . -}}
{{- $secretPrefix := include "%%% APPLICATION_NAME %%%.fullname" . -}}
{{- $releaseName := .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "%%% APPLICATION_NAME %%%.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    organization.org/host: {{ $organizationHost }}
{{ include "%%% APPLICATION_NAME %%%.labels" . | indent 4 }}
spec:
  strategy:
{{- include "%%% APPLICATION_NAME %%%.strategy" . | indent 4}}
  replicas: 3
  revisionHistoryLimit: 2
  minReadySeconds: 4
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "%%% APPLICATION_NAME %%%.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      organization.org/host: {{ $organizationHost }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "%%% APPLICATION_NAME %%%.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        organization.org/host: {{ $organizationHost }}
    spec:
      imagePullSecrets:
      - name: container-registry
      - name: container-registry-dev
      containers:
      {{- range .Values.containers }}
      - name: {{ .name }}
        image: {{ printf "container-registry.organization.org/%s/%s:%s" .image.organization .image.name $releaseName }}
        imagePullPolicy: Always
        ports:
        {{- range .ports -}}
          {{- toYaml . | nindent 10}}
        {{- end }}
        envFrom:
        - configMapRef: 
            name: {{ printf "%s-%s" $configMapPrefix .name | trunc 63 | trimSuffix "-" }}
        - secretRef: 
            name: {{ printf "%s-%s" $secretPrefix .name | trunc 63 | trimSuffix "-" }}
        {{- if .rest -}}
        {{- toYaml .rest | nindent 8 -}}
        {{- end -}}
      {{- end -}}
      {{- with .Values.httpdContainer }}
      - name: {{ .image.name }}
        image: {{ printf "container-registry.organization.org/%s/%s:%s" .image.organization .image.name $releaseName }}
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        envFrom:
        - configMapRef: 
            name: {{ printf "%s-%s" $configMapPrefix .name | trunc 63 | trimSuffix "-" }}
        - secretRef: 
            name: {{ printf "%s-%s" $secretPrefix .name | trunc 63 | trimSuffix "-" }}
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: {{ $organizationHost }}
            - name: User-Agent
              value: k8s-svhv4B-80
            port: http
            path: /live
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: {{ $organizationHost }}
            - name: User-Agent
              value: k8s-svhv4B-80
            port: http
            path: /ready
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          {{- toYaml .resources | nindent 10}}
        {{- if .rest -}}
        {{- toYaml .rest | nindent 8 -}}
        {{- end -}}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
